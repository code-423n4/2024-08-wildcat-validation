issue,title,primary finding,validator comment,status,root cause (URL),size
findings-10,Providers can replace credentials from other providers allowing a rogue or malicios provider to revoke all lenders credentials, ,"The logic, as written, does make sense because it checks whether the caller is the lastProvider or if the new expiry is greater than the old expiry. If neither condition is true, the revert is triggered, which aligns with the intended behavior.",Unsatisfactory,,59
findings-11,AccessControlHooks onQueueWithdrawal() does not check if market is hooked which could lead to unexpected errors such as temporary DoS,validation-304, ,Satisfactory,,90
findings-12,Lenders can avoid sanction restrictions in `FixedTermLoanHooks` by transferring to another account,findings-12,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/FixedTermLoanHooks.sol#L848-L868,119
findings-13,Minimum deposit requirement can be bypassed,findings-13,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L850-L880,92
findings-14,Borrower can reduce the maxTotalSupply below the current `totalSupply()`,findings-14,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketConfig.sol#L101-L111,79
findings-15,Lack of slippage control on deposit functions,,"since the asset value does not change in the provided scenario, i couldnt conclude to a vulnerability",Unsatisfactory,,89
findings-16,Lenders lose funds if deposits continue to operate when Borrower has been sanctioned,findings-16,"primary -  a bit obscured, but this doesnt make sense if the borrower is sanctioned after borrowing, so the reports refers to only the period where the borrower is confirmed by Wildcat and the contract is pending funds. in addition, they can also make themselves sanctioned too, and this falls into OOS behaviour referred here: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#malicious-delinquent-borrowers-can-lead-to-loss-of-funds ",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L104-L108,66
findings-18,Incorrect use of `state.isDelinquent` in `updateTimeDelinquentAndGetPenaltyTime` function - total misbehavior of applying delinquency fee,findings-18,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L96,60
findings-19,Wrong calculation of delinquent penalty time in `updateTimeDelinquentAndGetPenaltyTime` function,findings-19,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L118,66
findings-20,`repay` opearation can be effectively simulated bypassing `state.isClosed` and hooks,,"The sponsor also commented, I agree with the Sponsor as this should be sent along with a QA report, however, thinking that the referred issue can be organically developped due to the network - state is not closed YET and the funds are already sent, then the question might pinpoint about why they send funds",Unsatisfactory,,33
findings-21,An incorrect value of state.isDelinquent might impact the functionality of hook operations.,findings-18,it seems the root cause of this report is the same as findings-18,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L96,41
findings-22,Missing `isHooked` check when calling `onQueueWithdrawal` hook function,validation-304, ,Satisfactory,,73
findings-23,Borrower can reduces APR in fixed markets causing lenders to lose funds,findings-23,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketConfig.sol#L123-L176,99
findings-3,The `setHooksAddress` implementation is incorrect.,findings-3,primary - an edge case for me,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/types/HooksConfig.sol#L90,47
findings-4,The new withdrawal batch may be prioritized over the expired withdrawal batch for repayment,findings-4,"primary - it´s at the edge of being a QA as it requires direct SC interaction, and an edge case if the old batch is expired before the TX confirmation",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketWithdrawals.sol#L153,191
findings-5,The protocol has not charged the protocol fee.,,insufficient proof,Unsatisfactory,,82
findings-7,Users can still deploy markets on a disabled hooks instance,validation-37,partial - refers to disabled hooks,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L506,100
findings-8,pushProtocolFeeBipsUpdates will unexpectedly revert on closed markets,,the report does not refer any issue actually - an intended behaviour only - not marking satisfactory,Unsatisfactory,,90
findings-9,Malicios users can grief admin calls to pushProtocolFeeBipsUpdates causing tranasctions to revert,,"since the indexes are input, no issues here. Also regarding the section: Thus, a malicios user can frontrun batch calls and cause them to revert and incur gas losses. The malicios user would specifically push the update to the last market in a batch for maximum gas losses, this is both not correct and donating attacker´s gas to the admin",Unsatisfactory,,87
validation-10,Lack of Access Control Checks in Critical Functions,,insufficient proof,Unsatisfactory,,47
validation-100,Gas Limit DoS in Protocol Fee Updates,,insufficient proof,Unsatisfactory,,53
validation-109,Borrower can lock `lender` funds in `market` via `WildcatMarket::closeMarket`,validation-166, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L848-L868,108
validation-11,Disabled  SphereXEngine Proctection.,validation-138,low quality,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatArchController.sol#L61,26
validation-111,Critical Access Control Bypass in encodeRoleProvider Function: Unauthorized Access Risk in RoleProvider Handling, ,insufficient proof,Unsatisfactory,,67
validation-112,WildcatSanctionsSentinel:: createEscrow allows unregistered market to used to create escrow ,validation-112,primary - not sure whether it´s a vulnerability ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatSanctionsSentinel.sol#L121,41
validation-113,anyone can remove  and override Sanction leading to dos,,https://docs.wildcat.finance/miscellaneous/deprecated-documentation/component-overview/wildcatsanctionssentinel.sol#overridesanction,Unsatisfactory,,38
validation-114,Incorrect Role Encoding/Decoding Vulnerability in RoleProvider.sol,,insufficient proof,Unsatisfactory,,42
validation-117,mproper Handling of Constructor Arguments in LibStoredInitCode Library Leads to Incorrect Contract Initialization, ,spam,Unsatisfactory,,91
validation-118,Token Rescue Function Misuse in WildcatMarket.sol,,spam,Unsatisfactory,,51
validation-119,"User could withdraw more than supposed to, forcing last user withdraw to fail",validation-119,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketWithdrawals.sol#L248,92
validation-121,FIFO queue is not strict enough ,validation-121,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketBase.sol#L460,51
validation-123,Inconsistency across multiple repaying functions causing lender to pay extra fees.,validation-123,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L226,120
validation-124,Borrower can fully bypass the `onRepay` hook,validation-124,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L168,40
validation-125,Closing a market does not trigger `onSetAnnualInterestAndReserveRatioBips` hook.,,"it looks like a design choice, the warden didn´t provide the impact and the reasoning of the issue, hence not marking as satisfactory",Unsatisfactory,,64
validation-126,Nelwly encoded `RoleProvider` in `AccessControlHooks::addRoleProvider` can never be a `pullProvider`, ,"The borrower's ability to add new pull providers is not hindered by the code, provided they supply a valid providerAddress that correctly implements IRoleProvider with isPullProvider() returning true",Unsatisfactory, ,115
validation-127, Arbitrary address can assume `borrower` role in `AccessControlHooks::constructor` without registering with `Arch Controller`, ,the attacker should have the ability to be in the borrower´s market to exploit this - inssufficient proof,Unsatisfactory,,61
validation-128,Arbitrary address can pose as borrower and change a hooked market's `minimumDeposit` amount in `AccessControlHooks::setMinimumDeposit`, ,the submission does not provide strep by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,29
validation-129,`FixedTermLoanHook` looks at `block.timestamp` instead of `expiry`,validation-129,primary - it looks like the intended behaviour but marking to provide to the sponsors,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L848,41
validation-13,A Sanctioned Address Can Not Only Repay Debt but Also Process Unpaid Withdrawal Batches Gracefully in WildcatMarketWithdrawals,validation-13,primary,Satisfactory,https://github.com/0xastronatey/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketWithdrawals.sol#L283,169
validation-130,Users are incentivized  to not withdraw immediately after the market is closed.,,i think this is a known issue referred here: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#newer-withdrawals-lose-some-of-their-accrued-interest-to-previous-withdrawals-in-the-same-batch ,Unsatisfactory,,37
validation-131,Unchecked Token Transfer in Withdrawal Process Enabling Denial of Service Attack,,insufficient proof,Unsatisfactory,,125
validation-134,Unchecked Array Access in getRegisteredBorrowers Function,,the submission does not provide strep by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,82
validation-137,Incorrect input data size in `WildcatMarketBase::_createEscrowForUnderlyingAsset` will interrupt the creation of new escrow contract for sanctioned address, ,the implementation seems to be correct - insufficient proof,Unsatisfactory,,121
validation-138,`SphereXConfig::constructor` argument `engine` set as `0` in `WildcatArchController::constructor` will prevent key `WildcatArchController` functions from from executing,validation-138,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatArchController.sol#L61,90
validation-139,Unbounded `extraData` in Hook System Enables Gas Griefing,,insufficient proof,Unsatisfactory,,96
validation-14, `repay` Function Transfers Funds Before Market Status Check,,no issues pointed,Unsatisfactory,,53
validation-140,Unbounded Loop in executeWithdrawals Function can lead to DoS,,insufficient proof,Unsatisfactory,,79
validation-141,Fee Update Deadlock in `HooksFactory` Contract,,spam,Unsatisfactory,,59
validation-142,`WildcatArchController::updateSphereXEngineOnRegisteredContracts` will never execute because `sphereXEngine` is set as `address(0)` and never updated.,validation-138, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatArchController.sol#L61,71
validation-146,Partially repaying unpaid batches will be broken if scale factor exceeds 2,validation-164,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketBase.sol#L676,88
validation-147,Role providers can bypass intended restrictions and lower expiry set by other providers,validation-147,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L413,46
validation-148,"Improper validation on the `HooksFactory::_validateFees` function precisely on the  `OriginationFee`and `ProtocolFeeBips` parameters, Leading to a borrower deploying a market without paying the Origination Fee.",validation-148,"primary -  if the asset reverts at 0 value transfers, not possible",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L153-L170,92
validation-149,Lack of proper access control in `HooksFactory::pushProtocolFeeBipsUpdates` function can lead to a malicious user being able to update protocol fees of all unrelated markets., ,insufficient proof - the  POC crafts the template - kind of spam indeed,Unsatisfactory,,87
validation-154,The penalty APR to be returned can be manipulated,validation-154,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/libraries/FeeMath.sol#L121,82
validation-155,Incorrect Interest Accrual for Expired Withdrawal Batches After Repayment,validation-164,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketBase.sol#L676,97
validation-156,No State Update After Transfer in repayOutstandingDebt and repayDelinquentDebt Leads to Inaccurate Interest Accrual,validation-123, partial as the submission only refers to repayOutstandingDebt and repayDelinquentDebt,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L226,82
validation-157,Protocol Fees accrue a part of interest as well ,,the submission does not provide step by step demonstration of the issue and the reasoning. ,Unsatisfactory,,29
validation-158,Arbitrary Reduction of Fixed Term End Time in `FixedTermLoanHooks` Contract,,spam,Unsatisfactory,,60
validation-159,Hardcoded Protocol Fee Cap in validateFees Function,,insufficient proof,Unsatisfactory,,43
validation-16,Missing solidity version specification for cancun-compatible EVM assembly instructions,,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,45
validation-162,Potential Risk in AccessControlHooks Due to Single Borrower Control in Critical Functions,,insufficient proof - spammish,Unsatisfactory,,65
validation-164,`state.scaleFactor` is calculated incorrectly when handling the current expired withdrawal batch,validation-164,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketBase.sol#L676,349
validation-165,A `borrower` can remove itself from role providers of Hooks,validation-165,primary - shooting own foot scenario - needs to be at QA but holds the bar to be a proper report,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/AccessControlHooks.sol#L249-L259,98
validation-166,No lender is able to exit even after the market is closed,validation-166,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L848-L868,122
validation-167,`WildcatMarketConfig#nukeFromOrbit()` reverts even if the lender has been marked as sanctioned,validation-167,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketConfig.sol#L82-L88,212
validation-168,The `annualInterestBips` of a market hooked by a fixed-term hook can be reduced at any time even when the fixed term time of the market has not yet elapsed,findings-23, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketConfig.sol#L123-L176,131
validation-169,`HooksFactory#_deployMarket‎()` didn't check if `originationFeeAmount` is zero or not,validation-148, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L153-L170,43
validation-170,Inherent Delayed Delinquency Status Update in WildcatMarket Contract,findings-18, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L96,95
validation-171,Sanctioned user can modify state of the market,validation-3,partial as the report only refers to repay(),Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L202,37
validation-175, Reserve Ratio Manipulation Allows Excessive Borrowing in WildcatMarket,,this report desperately needs a coded POC to be validated. can´t mark as satisfactory. also this can be OOS: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#malicious-delinquent-borrowers-can-lead-to-loss-of-funds,Unsatisfactory,,98
validation-176,"Once hooks are disabled, there is no way to enable or add them again.",validation-176,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L205,87
validation-177,OOG (out of gas)  and DoS in `deployMarket` function due to insufficient input validation(parameters),,spam,Unsatisfactory,,123
validation-178,Improper logic implementation on `AccessControlHooks::unblockFromDeposits` function leading to unblocked lenders being unable to deposit., ,insufficient proof as the POC uses mock contract functions - not the interface,Unsatisfactory,,62
validation-179,Improper logic implementation on `FixedTermLoanHooks::revokeRole` function when a provider whose role has been removed they can still revoke a lender., ,insufficient proof,Unsatisfactory,,52
validation-180,Insuffecient Access Control in `nukeFromOrbit` Function Allows Blocking Legitimate Transactions in Wildcat Market, ,this should be the intended behaviour and the systematic risk of anyone participating to the protocol. questioning chainanalysis data feed is the same as Chainlink can provide inccorrect price - yes but same time no imo,Unsatisfactory,,67
validation-181,Role providers cannot be EOAs as stated in the documentation.,validation-181,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L220,212
validation-182,The APR can neither be increased nor locked if the market becomes delinquent following a reduction of over 25% in APR,validation-182,primary - looks like this is the intention to protect lenders,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketConfig.sol#L146-L150,98
validation-186,"Use of adress(0) as sentinel adress  in unsetCredential() could cause incompatibility issues with future Ethereum upgrades eg (EIP-1559, serenity) ", ,the submission does not provide step by step demonstration of the issue and the reasoning.,Unsatisfactory,,40
validation-187,Improper Handling of Loop-Called Methods and MultiCall Contracts in Spherex Guarded Methods Can Cause UnIntended Reverts, ,insufficient proof,Unsatisfactory,,85
validation-188,Reserved assets for withdrawals can be lower than they should,validation-188,"primary - looks similar to validation-263 in terms of impact, but also a design choice to have liquidity",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L59,95
validation-19,Possible reentrancy due to inefficient function implementation methodology,,insufficient proof,Unsatisfactory,,47
validation-191,Evade Sanction Escrow by transferring tokens to another address,,they should possess the tokens first for the scenario to work,Unsatisfactory,,29
validation-192,Borrower Can Update Market Parameters After Withdrawal Initiation Leading to Incorrect Asset Claims,,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,32
validation-195,Lack of Circuit Breaker in WildcatMarketBase.sol for Emergency Halt,,insufficient proof,Unsatisfactory,,54
validation-197,Lack of Access Control in releaseEscrow Function,,no real issues provided,Unsatisfactory,,35
validation-198,The `reserveRatioBips` will be incorrect if a market APR is reduced again two weeks after the initial reduction of over 25%,validation-198,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/MarketConstraintHooks.sol#L204-L288,82
validation-199,`HooksFactory#deployMarket()` doesn't check whether the specified `hooksTemplate` is disabled ,validation-37,partial - refers to disabled templates,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L506,59
validation-200,Inconsistent Behavior in Temporary Reserve Ratio Calculation After Interest Rate Changes,validation-200,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/MarketConstraintHooks.sol#L227,82
validation-201,Access Control Vulnerability: Sanction Override Functions,,https://docs.wildcat.finance/miscellaneous/deprecated-documentation/component-overview/wildcatsanctionssentinel.sol#overridesanction,Unsatisfactory,,87
validation-202,Lack of Returned Data Validation in staticcall in AccessControlHooks.sol,,spam,Unsatisfactory,,35
validation-203,Potential block.timestamp Manipulation Risk in FixedTermLoanHooks.sol,,spam,Unsatisfactory,,36
validation-204,"`maxTotalSupply` can be set to any value, even below the current total supply of the market",findings-14, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketConfig.sol#L101-L111,55
validation-208,Accounts blocked from deposits can ultimately mimic the exact state as a depositor,validation-208,primary - it looks a bit off with the quoted text referred,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketToken.sol#L41,41
validation-210,Markets do not update delinquency timer correctly if the account goes underwater through interest accrual,findings-19, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L118,61
validation-211,Lack of Access Control in depositUpTo Function in WildcatMarket.sol,,spam,Unsatisfactory,,36
validation-212,some protected external non-view functions does not have sphereXGuardExternal() modifier,validation-226,partial,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L34,39
validation-213, Lack of Balance Control in repay Function in WildcatMarket.sol,,spam,Unsatisfactory,,42
validation-217,Exploiting Faulty Logic in Role Provider: Expired Credential Bypass in Access Control Hooks,,insufficient proof,Unsatisfactory,,26
validation-218,Excessive Interest and Fees Due to Multiple Repayments,validation-218,primary - this suggest the contrary reference of validation-164 ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L202,159
validation-220,Borrower Can Cause Intentional Out-of-Gas Reverts to Block Withdrawals of Users Transferred Debt Tokens, ,spam,Unsatisfactory,,34
validation-221,Sanctioned Account Handling May Lead to Unexpected Behavior on Markets with Withdrawal Restrictions, ,spam,Unsatisfactory,,34
validation-222,Borrower Can Intentionally Avoid Delinquency Fees by Closing Market Early,,spam,Unsatisfactory,,90
validation-223,### The function [WildcatSanctionsSentinel::overrideSanction] doesn't implement access control allowing anybody to override the sanction status of any account associated with a borrower , ,https://docs.wildcat.finance/miscellaneous/deprecated-documentation/component-overview/wildcatsanctionssentinel.sol#overridesanction,Unsatisfactory,,67
validation-225,Lenders' funds is locked without interest in prematurely closed fixed-term loan markets,validation-166, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L848-L868,60
validation-226,No any external functions in `HooksFactory` are protected by SphereX,validation-226,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L34,30
validation-227,### The function [WildcatSanctionsSentinel::getEscrowAddress] returns the wrong escrow address due to misplaced implementation in the assembly code, ,insufficient proof,Unsatisfactory,,86
validation-228,Market cannot be deployed seperate from hook deployment,,"insufficient proof - the hook address should be set by setHooksAddress before deployment, this is as per the development flow and intended",Unsatisfactory,,56
validation-229,Markets cannot be deployed with tokens that do not return string name and symbol,,OOS --> https://github.com/code-423n4/2024-08-wildcat/blob/main/4naly3er-report.md#L-7,Unsatisfactory,,42
validation-23,totalSupply Overestimates Circulating Supply,,the report desperately needs a coded POC- not validating,Unsatisfactory,,65
validation-230,"Overpayment: Users Can Repay More Than Outstanding Debt, Leading to Potential Fund Loss",,transferring more assets should not be protocol´s responsibility. the same like sending eth to a contract only because it has receive(),Unsatisfactory,,100
validation-231,"### The function [WildcatSanctionsSentinel::createEscrow] include a check which checks for the existance of an escrowContract, however this check only can lead to unintended behaviour during code implementation", ,insufficient proof,Unsatisfactory,,98
validation-234,  ### The function [WildcatSanctionsSentinel::createEscrow] doesn't implement access control allowing anyone to call this function to implement unintendeded state changes, ,"The submission does not provide any demonstration of the issue, reasoning and code blocks. ",Unsatisfactory,,36
validation-235,The `HooksFactory::pushProtocolFeeBipsUpdates` Function Allows Unauthorized Protocol Fee Updates.,,insufficient proof,Unsatisfactory,,55
validation-236,Inconsistent Access Control Allows Known Lenders to Bypass Deposit Restrictions via Transfers,validation-236,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L769-L804,55
validation-238,Borrower Can Permanently Invalidate Push Provider Credentials Through Block/Unblock Actions,validation-238,primary - my take is that it is the intended mechanism,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L447-L449,68
validation-239,Role provider permission escalation,validation-147, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L413,31
validation-24,Unsafe casting from `uint256` to `uint32` could cause `setCredential` function in `LenderStatus` library to give wrong `lastApprovalTimestamp` value/Overflow., ,technically true after year 2106,Unsatisfactory,,138
validation-240,`onExecuteWithdrawal` hook uses an incorrect function signature definition,validation-240,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/types/HooksConfig.sol#L374-L426,85
validation-241,H-01 `LibHooksConfig.setHooksAddress` is updating `address` incorrectly,findings-3, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/types/HooksConfig.sol#L90,75
validation-245,Withdrawals might fail when market is closed,,the submission does not provide strep by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,57
validation-246,Sanctioned Addresses Can Bypass Checks Due to Incorrect Assembly Code,validation-246,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketBase.sol#L254-L273,128
validation-247,onRepay hook can be bypassed,validation-124,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L168,25
validation-248,The function [pushProtocolFeeBipsUpdates] allows anybody to update the protocol fee of various markets, ,"The submission does not provide any demonstration of the issue, reasoning and code blocks. ",Unsatisfactory,,53
validation-249,OOG(out of gas) and Dos in registerBorrower function,,spam,Unsatisfactory,,95
validation-250,Lack of Zero Address Validation in createEscrow,,spam,Unsatisfactory,,43
validation-251,Market can immediately fall into deliquency,,this submission needs a coded POC - unfortunately cant validate without it,Unsatisfactory,,96
validation-252,Anyone can call `AccessControlHooks.onQueueWithdrawal` to DOS lender's operation,validation-304, ,Satisfactory,,87
validation-254,Hook deployment is vulnerable to reorg situations ,validation-254,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L317-L319,37
validation-258,Increasing APR when reserve ratio is zero and borrower uses all the funds moves the account to delinquency,validation-258,primary - i think this can be dup of findings-19,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketConfig.sol#L123,50
validation-259,Complex Market Dynamics in `borrow` Function Leading to Potential Vulnerabilities,,insufficient proof,Unsatisfactory,,242
validation-260,Keyspace Collision Between Account and Escrow Contract in Sanction Overrides Mapping could lead to Unintended behaviour, ,insufficient proof,Unsatisfactory,,30
validation-263,lenders are unable to get full repayment amount ,validation-263,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketWithdrawals.sol#L251,112
validation-265,Arbitrary Asset Freeze and Withdrawal Queuing Due to Lack of Sanction Re-verification in `_blockAccount` Function, ,this falls into the known issues: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#malicious-delinquent-borrowers-can-lead-to-loss-of-funds,Unsatisfactory,,29
validation-266,"Persistent Contract State and Address After Block Reorganization by ""create"" opcode (_deployHooksInstance function)", ,spam,Unsatisfactory,,78
validation-267,Lack of validation of the `FixedTermLoanHooks.setFixedTermEndTime` function can lead to unintended behaviour,validation-267,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L188-L192,48
validation-269,Sanctions can be bypass by lender ,,"nope, the contract is whitelisted here, not the sanctioned address: https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatSanctionsSentinel.sol#L118-L119",Unsatisfactory,,116
validation-27,NukeFromOrbit can cause markets to drop below the required reserves. ,,this should be the intended mechanism as the data feed from Chainalysis deemed to be true and the sanctioned user should not modify state - OFAC rules,Unsatisfactory,,114
validation-271,Deposits/borrows deviate from intended implementation,validation-271,primary - but def should be in a QA report,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/README.md#L243-L249,68
validation-272,Borrowers can sidestep paying the needed APR for some supported assets,validation-319,same rebasing root cause,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L188-L188,28
validation-273,Borrowers would lose a lot of funds if market is intentionally/unintentionally frequently updated,,"subject to provide a coded POC, cant mark satisfactory",Unsatisfactory,,67
validation-275,Zero Address Can Deploy Markets Due to Insufficient Salt Validation,,"if I understood correctly, the attacker should exploit the contract by pretending to be the zero address. - insufficient proof ",Unsatisfactory,,89
validation-276,Borrowers will pay excess debts or lower debts and the rest will be covered by the lender ,,the submission does not provide step by step demonstration of the issue and the reasoning. ,Unsatisfactory,,59
validation-277,Block reorg can cause unexpected behaviour during deployment of WildcatMarkets which could lead to broken functionality of the protocol,validation-254, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L317-L319,44
validation-279,Memory Corruption Risk in LibStoredInitCode Due to Scratch Space Overuse,validation-279,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/LibStoredInitCode.sol#L60-L78,53
validation-28,Borrower-Controlled Interest Rate Manipulation Vulnerability,,spam,Unsatisfactory,,140
validation-280,Borrower Lockout in WildcatMarketController,,there is no link between registermarket and deploymarket . registermarket does not validate borrower at all. i couldnt spot the issue here,Unsatisfactory,,110
validation-281,Potential Storage Collision in Withdrawal Status Mapping Due to Type Mismatch,,The value 0x100000001  exceeds the maximum value of a uint32 - insufficient proof,Unsatisfactory,,81
validation-282,Race Condition in Asset Borrowing Leading to Potential Over-borrowing in WildcatMarket.sol,,insufficient proof,Unsatisfactory,,111
validation-283,"Allowed amounts for Deposit, Transfer, and Withdrawal are increasing as the scale factor increases with accumulated interest thus DoS the smaller fund operations",validation-283,primary - similar topic of validation-271,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/MarketState.sol#L76-L78,66
validation-285,Incorrect Calculation in _calculateTemporaryReserveRatioBips Function,validation-285,primary - seems intentional but for penalyzing the borrower it might be needed indeed,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/MarketConstraintHooks.sol#L160,66
validation-286,Interest Rate Manipulation Due to Incremental Reductions Bypass Reserve Ratio Protection,,it looks like it´s the known issue: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#malicious-delinquent-borrowers-can-lead-to-loss-of-funds,Unsatisfactory,,73
validation-287,Incorrect Handling of Empty extraData in WildcatMarketWithdrawals._executeWithdrawal,,"It appears that executeWithdrawals is not intended to handle extraData for each withdrawal in the batch. It focuses on processing multiple withdrawals efficiently without additional data. The report assumes that executeWithdrawals should pass extraData to the hooks, but this may not be the case. insufficient proof - would really need a coded POC for the contrary",Unsatisfactory,,58
validation-288,Permanent loss of user funds possible due to lack of recourse for incorrectly sanctioned accounts,,"""A user is incorrectly flagged as sanctioned by the Chainalysis oracle."" - the reliance on Chainalysis is intended and referred here: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#reliance-on-chainalysis",Unsatisfactory,,134
validation-289,Hook-Based Sanctions Bypass in WildcatMarketWithdrawals,,insufficient proof,Unsatisfactory,,81
validation-29,A borrower can create a market with disabled  `hookTemplate`.,validation-37,partial - refers to disabled templates,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L506,25
validation-290,Attacker can steal sanctioned users escrow withdrawals,,"Even if the attacker calls createEscrow first, they will only deploy the legitimate WildcatSanctionsEscrow contract.",Unsatisfactory,,188
validation-291,Borrower Can Steal Funds By Setting reserveRatioBips to 100%,,known issue: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#malicious-delinquent-borrowers-can-lead-to-loss-of-funds,Unsatisfactory,,60
validation-292,Malicious Lender Can Block Other Lenders from Withdrawing Funds,validation-292,primary - it´s not clear how the malicious lender transfers market tokens within the same first deposit function (requires a fallback mechanism or a custom hook),Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L713,82
validation-293,`AccessControlHooks::onQueueWithdrawal` Missing Access Control Check,validation-304, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/AccessControlHooks.sol#L812-L825,82
validation-294,Market Tokens Can Be Duplicated via transferFrom,,this report desperately needs a coded POC - not validating,Unsatisfactory,,56
validation-295,lender that's mistakenly flagged can lose access to funds,,this should be the intended behaviour and the systematic risk of anyone participating to the protocol. questioning chainanalysis data feed is the same as Chainlink can provide inccorrect price - yes but same time no imo,Unsatisfactory,,58
validation-296,validateCredential Reverts on Successful Validation,,unfortunately the submission is too wordy and desperately needs snippets and a valida POC - cant mark satisfactory as the claimed issue is not obvious,Unsatisfactory,,84
validation-297,FixedTermLoanHooks Allows Borrower to Increase Loan Term,validation-297,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/FixedTermLoanHooks.sol#L236,53
validation-298,Cycling funds repeatedly through the market and escrow poses risks and may facilitate money laundering., ,i couldnt observe laundering but obly onchain back & forth transfers. the borrower is KYC´ed btw,Unsatisfactory,,101
validation-299,Bug Report: Insufficient Input Validation in `WildcatMarket.sol`,,"isTransferDisabled should be introduced to config a market , which will be initialized in _onCreateMarket‎(), and used for token transfer control",Unsatisfactory,,191
validation-3,A Sanctioned Address Can Directly Repay Debt via repay() and repayOutstandingDebt() in WildcatMarket,validation-3,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L202,192
validation-30,A Sanctioned Borrower Can Close Markets Gracefully in WildCatMarket,validation-30,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L226,163
validation-300,"Protocol Fee Update Bypass: Markets Can Ignore Fee Changes, Leading to Revenue Loss and Inconsistent Fee Structure", ,insufficient proof,Unsatisfactory,,134
validation-301,Unfair advantage in withdrawal queuing allows users to minimize waiting times,,it looks like it´s the desired behaviour and also covered with a known issue: https://docs.wildcat.finance/technical-overview/security-developer-dives/known-issues#newer-withdrawals-lose-some-of-their-accrued-interest-to-previous-withdrawals-in-the-same-batch,Unsatisfactory,,201
validation-302,"`FixedTermLoanHooks` allow Borrower to update Annual Interest before end of the ""Fixed Term Period""",findings-23, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarketConfig.sol#L123-L176,102
validation-303,Inconsistent State After Market Closure,,"""Due to a bug or a malicious action, another function that calls _writeState is executed after the closure."" - insufficient proof ",Unsatisfactory,,53
validation-304,`AccessControlHooks::onQueueWithdrawal` do not check `market.isHooked` allowing anyone to call the function with arbitrary `hooksData`,validation-304,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/AccessControlHooks.sol#L812-L825,68
validation-305,Inconsistent Interest Accrual After Withdrawal Batch Expiry,validation-164,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketBase.sol#L676,57
validation-307,debit owned by borrower  not cleared after full repayment of loan ,findings-19, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L118,113
validation-308,Missing Sanction Check During Market Origination,,"the submission does not refer to protocols state change invariant by the sanctioned user - so not validating this, also the unsanctioned lender deposits dont violate sanctions as referred - so this part is kind of manipulative, on the other hand, the borrower wont be able to borrow due to (_isFlaggedByChainalysis(borrower)) check in borrow function. ",Unsatisfactory,,49
validation-309,Inconsistent Handling of Sanctioned Funds During Withdrawal,,insufficient proof without step by step code snippets ,Unsatisfactory,,47
validation-31,"Calldata Underflow in inline assembly block Leading to Memory Corruption, Denial of Service(DoS) and potential Reentrancy Risks.", ,"Since both calldatasize() and DepositCalldataSize are controlled and valid, the subtraction cannot underflow.",Unsatisfactory,,105
validation-310,Inability to Override Erroneous Chainalysis Sanction Flag for Borrowers in WildcatMarket.borrow Function , ,this should be the intended mechanism and not in the hands of the protocol - not marking satisfactory,Unsatisfactory,,40
validation-311,Missing Validation Result Handling,,insufficient proof,Unsatisfactory,,42
validation-313,Malicious User Can Steal Protocol Fees,,insufficient proof,Unsatisfactory,,47
validation-314,Invalidation Looping Logic,,"Due to a bug or a malicious action, another function that calls _writeState is executed after the closure.",Unsatisfactory,,42
validation-315,"`addRoleProvider` will revert if `providerAddress` is an EOA, while documentation state provider can be an EOA",validation-181, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L220,75
validation-316,Anyone can set the `sanctionOverrides` flag to true for an escrow contract on behalf of a borrower in `createEscrow, ,This line prevents it to set to true again: https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatSanctionsSentinel.sol#L129,Unsatisfactory,,36
validation-318,"`repayDeliquentDebt` is not effective, as the market will become delinquent again on next block",findings-19, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L118,123
validation-319,Market using `stETH` might still be delinquent after `repayDeliquentDebt`,validation-319,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L188-L188,71
validation-322,Unrestricted Token Transfer Vulnerability in rescueTokens Function,,intended behaviour - no issues,Unsatisfactory,,89
validation-325,The repayment is made after the market state is update in the `WildcatMarket.repayOutstandingDebt` and `WildcatMarket.repayDelinquentDebt` functions thus putting the borrower at a disadvantage,validation-123,partial as the submission only refers to WildcatMarket.repayOutstandingDebt and WildcatMarket.repayDelinquentDebt functions,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L226,72
validation-326,A borrower cannot prevent the transfer of market tokens if the market allows deposits only when the lenders have valid credentials,validation-326,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L893-L923,89
validation-329,Lack of validation for addresses returned by `tmpEscrowParams` in `WildcatSanctionsEscrow` contract,,insufficient proof,Unsatisfactory,,41
validation-330,Invalid `hooks templates` could be used for market deployments in the `HooksFactory.deployMarket` function,validation-37,partial - refers to existing templates,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L506,74
validation-34,Interest Rate Manipulation Vulnerability ,,spam,Unsatisfactory,,332
validation-37,Borrowers could still deploy market while the template is diabled,validation-37,"primary - while this is not the best quality report, it handles whether the template is disabled and the template exists - others are referring to one of the issues as of now",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/HooksFactory.sol#L506,63
validation-4,Function getBlacklistedAssets() become uncallable when BlackList assets list grows.,,insufficient proof,Unsatisfactory,,43
validation-41,Non-Atomic State Updates in Withdrawal Batch Processing,,spam,Unsatisfactory,,71
validation-42,Asset Retention and Unbacked Interest Accrual, ,spam,Unsatisfactory,,213
validation-43,`WildcantMarketWithdrawals.sol::executeWithdrawals` function does not have validation check for the sufficient balance  is there to repay all the address in the queue,validation-119, the warden spotted the lack of balance but couldnt reason it.,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarketWithdrawals.sol#L248,55
validation-44,Complex Market Closure Process Vulnerable to Interruption,,spam,Unsatisfactory,,121
validation-45,Escrow Sanction Override Bug: Critical Vulnerability and Compliance Risks,,intended: https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/WildcatSanctionsSentinel.sol#L118C1-L119C66,Unsatisfactory,,36
validation-46,Interest Rate Manipulation in Fixed-Term Loans,,spam,Unsatisfactory,,75
validation-47,Uncontrolled Removal of Controllers and Markets,,OOS --> https://github.com/code-423n4/2024-08-wildcat/blob/main/4naly3er-report.md#m-1-centralization-risk-for-trusted-owners,Unsatisfactory,,59
validation-48,no access control on createescrow function,,no real issue provided,Unsatisfactory,,47
validation-49,Potential for Indefinite Delay of Withdrawal Batch Processing,,spam,Unsatisfactory,,82
validation-51,Using multiple versions of Solidity in one project can lead to several issues,,"insufficient proof - general knowledge to be in QA sent in Med, not holding the bar to be a report - not validating",Unsatisfactory,,57
validation-52,use of 2 different types for the same variable in `WildcatMarketWidrawals::getAccountWithdrawalStatus`, ,"The Solidity compiler handles the conversion safely, and as long as expiry values are within the uint32 range",Unsatisfactory,,44
validation-53,Unauthorized Credential Manipulation in `setCredential` and `unsetCredential` Functions,,internal functions cant be called by anyone,Unsatisfactory,,98
validation-54,Anyone can call the `setCredential` function in `LenderStatus.sol` contract,,the submission does not provide step by step demonstration of the issue and the reasoning. Cant mark satisfactory,Unsatisfactory,,67
validation-57,Unbounded `hooksData` in Market Deployment ,,insufficient proof,Unsatisfactory,,154
validation-6, Potential Reentrancy in External Calls,,insufficient proof,Unsatisfactory,,33
validation-62, Interest Rate Manipulation for Short-Term Arbitrage,,spam,Unsatisfactory,,99
validation-63,unbounded length of array,,insufficient proof,Unsatisfactory,,28
validation-64,Interest Rate and Reserve Ratio Exploitation,,spam,Unsatisfactory,,112
validation-65,Withdrawal Queue Manipulation Vulnerability,,spam,Unsatisfactory,,123
validation-67,Delinquency Fee Manipulation in Withdrawal Process,,spam,Unsatisfactory,,82
validation-68,Denial of Service (DoS) Vulnerability in executeWithdrawals Function,,insufficient proof,Unsatisfactory,,135
validation-69,"By calling the releaseEscrow function, normal usage is being prevented.",,insufficient proof,Unsatisfactory,,41
validation-70,Denial of Service (DoS) Vulnerability in grantRoles Function,,spam,Unsatisfactory,,90
validation-74,Lack of Chain-Specific Credential Validation,,spam,Unsatisfactory,,101
validation-79,fucntion overrideSanction and removeSanctionOverride has failed.,,insufficient proof,Unsatisfactory,,44
validation-8, Integer Underflow in Range Calculations,,insufficient proof,Unsatisfactory,,45
validation-80,Lenders can abuse penalty mechanism to accrue higher interest,, needsmore clarification of the issue - cant mark satisfactory,Unsatisfactory,,66
validation-81,Credential Reuse Vulnerability in Access Control System,,spam,Unsatisfactory,,83
validation-86,Invalid Hooks Template Address Handling,,should be QA as the function implements onlyArchControllerOwner - spam,Unsatisfactory,,122
validation-89,Delinquency fee can be totally or partially avoided due to MarketState.isDelinquent only being updated at the end of a market operation,findings-18,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/libraries/FeeMath.sol#L96,145
validation-9, Lack of Input Validation in Assembly Block,,insufficient proof,Unsatisfactory,,80
validation-90, Incorrect Address Used in SphereX Engine Authorization Process Leading to Potential Access Control Failure, ,spam,Unsatisfactory,,49
validation-91,nconsistent Borrower Registration Context Allowing Centralized Control Over Multiple Markets,,spam,Unsatisfactory,,53
validation-92,Context Misalignment in Blacklist Management Allowing Only Owner to Control Market-Wide Entity Blacklists, ,spam,Unsatisfactory,,49
validation-93,Unbounded Growth of Unpaid Withdrawal Batches Array,,spam,Unsatisfactory,,86
validation-94,Interest can be accrued twice in the same transaction,,this report needs a coded POC badly - insufficient proof,Unsatisfactory,,78
validation-96,Ambiguity in Sanction Enforcement Across Multiple Markets: Sanction Overrides are not Market-Specific, ,"""....different sanction rules"" - insufficient proof",Unsatisfactory,,52
validation-97,Non-Configurational Functions in WildcatMarketConfig: nukeFromOrbit Should Be Moved to a Security-Specific Contract, ,spam,Unsatisfactory,,52
validation-98,Improper Validation Of create2 Return Value,,"INVALID. from evm.codes: Stack output;
address: the address of the deployed contract, 0 if the deployment failed.",Unsatisfactory,,42
validation-99,Denial of Service via Dust Withdrawal Spam,,spam,Unsatisfactory,,123
validation-101,Inconsistent Use of `block.timestamp` in Multi-chain Deployments,,insufficient proof - spammish,Unsatisfactory,,65
validation-102,Compatibility Issue Due to Unsupported PUSH0 Opcode,,insufficient proof - spammish,Unsatisfactory,,34
validation-103,isKnownLenderOnMarket is not set to false whenever a user withdraws all his scaled balance., ,"The protocol is designed to keep a lender's ""known"" status persistent, even if their balance becomes zero. this avoids unnecessary re-verification when the lender returns to the market, improving user experience and reducing gas costs.",Unsatisfactory,,140
validation-104,A user with expired credentials can receive tokens and bypass restrictions because credentials check is not enforced in the transfer hook as it is done in the deposit hook ,validation-326, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/access/FixedTermLoanHooks.sol#L893-L923,121
validation-105,Unauthorized Approval of Token Allowances,,spam,Unsatisfactory,,35
validation-107,Withdrawal Queue Can Remain Unfulfilled After Liquidity is Burnt,,spam,Unsatisfactory,,71
validation-108,`_executeWithdrawal` function does'nt verify whether the `accountAddress` has already withdrawn the full amount owed, ,spam,Unsatisfactory,,34
validation-115,FixedTermLoanHooks has DoS With Block Gas Limit in grantRoles Function,,spam,Unsatisfactory,,130
validation-116,FixedTermLoanHooks has Block Values as a Proxy for Time,,spam,Unsatisfactory,,91
validation-120,MarketConstraintHooks has Block Values as a Proxy for Time,,spam,Unsatisfactory,,85
validation-122,MarketStateLib library has Block values as a proxy for time,,spam,Unsatisfactory,,96
validation-133,Repaying outstanding debt by the borrower will not clear the debt in the system thus the contract still incurs more debt after calling this function,validation-123, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/main/src/market/WildcatMarket.sol#L226,120
validation-135,The contract goes back to being in a Delinquent state 1 seconds after repaying all DelinquentDebt because of a wrong repayment flow,validation-135,"primary - on the contrary if validation-123, this issue refers to another point",Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/market/WildcatMarket.sol#L186-L191,173
validation-144,LenderStatus has Unencrypted Private Data On-Chain,,spam,Unsatisfactory,,58
validation-145,LenderStatus has Block Values as a Proxy for Time,,spam,Unsatisfactory,,68
validation-150,LibTransientBytesArray has DoS with Block Gas Limit OOG,,spam,Unsatisfactory,,210
validation-151,The user may lose their funds when calling the WildcatMarketWithdrawals.executeWithdrawal() and WildcatMarketWithdrawals.executeWithdrawals() functions, , the submission does not provide step by step demonstration of the issue and the reasoning. ,Unsatisfactory,,24
validation-152,Possible DOS when calling HooksFactory.deployHooksInstance(),,insufficient proof - spammish,Unsatisfactory,,26
validation-153,Unable to call HooksFactory.deployMarket() on assets with Non string metadata Name/Symbol, ,OOS -> https://github.com/code-423n4/2024-08-wildcat/blob/main/4naly3er-report.md#L-7,Unsatisfactory,,26
validation-161,Bypassing Access Controls via Insufficient Validation of hooksData,,spam,Unsatisfactory,,85
validation-172,no access control on pushProtocolFeeBipsUpdates,,no content,Unsatisfactory,,25
validation-173,"In pushProtocolFeeBipsUpdates, there's a potential for an unbounded loop if the number of markets is very large, which could lead to out-of-gas errors.", ,spam,Unsatisfactory,,59
validation-174,deployMarket and deployMarketAndHooks functions could potentially be front-run,,spam,Unsatisfactory,,121
validation-18,HooksConfig contract has mcopy function Not Found,,insufficient proof - spammish,Unsatisfactory,,105
validation-183,Misaligned Function Selector in Inline Assembly ,,spam,Unsatisfactory,,102
validation-189,Potential for DOS,,spam,Unsatisfactory,,33
validation-190,Potential for Front-Running,,spam,Unsatisfactory,,28
validation-205,Misaligned Function Selector Allows Sanction Check Bypass,,spam,Unsatisfactory,,51
validation-206,create() is vulnerable to reorg attacks,,spam,Unsatisfactory,,64
validation-209,check for zero address in market,,spam,Unsatisfactory,,25
validation-21,WildcatArchController contract has Dependence on Predictable Environment Variable in Inherited completeOwnershipHandover Function, ,insufficient proof - spammish,Unsatisfactory,,230
validation-214,ReentrancyGuard has Storage Collision - Write to Arbitrary Storage Location,,spam - crafted POC,Unsatisfactory,,241
validation-219,Potential memory corruption,,spam,Unsatisfactory,,36
validation-22,WildcatSanctionsEscrow contract has External Call to User-Supplied Address in releaseEscrow function, ,spam,Unsatisfactory,,246
validation-232,should check the creation if the address code size is non-zero,,spam,Unsatisfactory,,89
validation-233,Inconsistent Minimum Balance Checks Enable Known Lender Status Bypass via `onTransfer` function,validation-233,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L786-L791,76
validation-237,LibStoredInitCode has Denial of Service (DoS) with Block Gas Limit,,spam,Unsatisfactory,,152
validation-256, Malformed External Calls,,spam,Unsatisfactory,,38
validation-257,No check for from and msg.sender are different in transferfrom,,spam,Unsatisfactory,,54
validation-261,Incorrect Error Handling in Assembly,,spam,Unsatisfactory,,34
validation-262,Inability of `ArchController`  to enable disabled hookstemplate,validation-176,,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L205,56
validation-268,"Borrower can REVOKE A USER'S CREDENTIAL by Blocking the user instead of just preventing deposits, while the unblocking function if called will not return back the User's Revoked Role.",validation-238, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/access/AccessControlHooks.sol#L447-L449,169
validation-274,Reentrancy Guard Prevent Internal Calls Between Protected Functions,,no real issue provided,Unsatisfactory,,63
validation-312,wrong implementation of registerBorrower.,,spam,Unsatisfactory,,29
validation-32,AccessControlHooks contract has Unchecked Function Call in status.setCredential in _setCredentialAndEmitAccessGranted function, ,spam,Unsatisfactory,,154
validation-321,Unbounded loops in pushProtocolFeeBipsUpdates(),,the bounds are indexes,Unsatisfactory,,45
validation-323,"safetransfer does not check the codesize of the token address, which may lead to fund loss",,insufficient proof,Unsatisfactory,,58
validation-324,Reentrancy Vulnerability in createEscrow(),,insufficient proof,Unsatisfactory,,44
validation-40,Blacklisted Assets Can Be Used as Origination Fee Assets in Hooks Templates,validation-40,primary,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L120,149
validation-55,Unsafe casting in '_calculateTemporaryReserveRatioBips()' function from 'uint256' to 'uint16' leads to loss of precision and data, ,insufficient proof,Unsatisfactory,,71
validation-56,Unprotected Initializer allows arbitrary contract deployment and could be exploited,,all library functions,Unsatisfactory,,104
validation-59,borrowers can bypass any sanctioned lender address by creating a lender account with different address., ,the submission is vague - concludes like borrower financing the borrower - needs more clearance,Unsatisfactory,,159
validation-60,originationFeeAsset can be a sanctioned asset,validation-40, ,Satisfactory,https://github.com/code-423n4/2024-08-wildcat/blob/fe746cc0fbedc4447a981a50e6ba4c95f98b9fe1/src/HooksFactory.sol#L120,94
validation-66,Address Collision and Stale Initialization Code Vulnerability in Market Deployment Using `LibStoredInitCode`, ,insufficient proof - spammish,Unsatisfactory,,56
validation-71,Premature Removal of Registered Controller After Recent Registration,,insufficient proof - spammish,Unsatisfactory,,47
validation-72,The `createEscrow` function in the `WildcatSanctionsSentinel` contract allows any user to deploy an escrow contract for any borrower, ,insufficient proof - spammish,Unsatisfactory,,83
validation-73,Optionality of `onQueueWithdrawal` Hook in `_onCreateMarket` Function,,insufficient proof - spammish,Unsatisfactory,,41
validation-76,HooksFactory has Insufficient Gas Griefing in pushProtocolFeeBipsUpdates function,,spam,Unsatisfactory,,149
validation-77,HooksFactory has DoS with Failed Call in pushProtocolFeeBipsUpdates function,,spam,Unsatisfactory,,199
validation-78,WildcatArchController contract has Insufficient Gas Griefing in updateSphereXEngineOnRegisteredContracts function, ,the calls are bounded,Unsatisfactory,,297
validation-82,WildcatSanctionsSentinel has DoS with Block Gas Limit Creating Too Many Escrows,,spam,Unsatisfactory,,130
validation-83,WildcatSanctionsSentinel has Transaction Order Dependence Sanction Overrides in overrideSanction function, ,spam,Unsatisfactory,,112
validation-84,WildcatSanctionsSentinel has DoS with Failed Call Escrow Creation Failure in createEscrow function, ,spam,Unsatisfactory,,144
validation-85,AccessControlHooks has DoS With Block Gas Limit Potential issue when looping through a large number of pull providers in getLenderStatus function, ,spam,Unsatisfactory,,155
validation-88,AccessControlHooks has Unchecked Call Return Value in _tryGetCredential the staticcall return value is not checked properly, ,spam,Unsatisfactory,,144
validation-95, Missing Bytecode Verification in Contract Deployment,,insufficient proof,Unsatisfactory,,54